/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import '@stencil/core';


import {
  IStcTabContentData,
  IStcTabHeaderData,
} from './components/tabs/interfaces';


export namespace Components {

  interface StcChip {
    'closeable': boolean;
    'id': string;
    'image': string;
    'text': string;
  }
  interface StcChipAttributes extends StencilHTMLAttributes {
    'closeable'?: boolean;
    'id'?: string;
    'image'?: string;
    'onStc-chip-close'?: (event: CustomEvent) => void;
    'text'?: string;
  }

  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
  interface MyComponentAttributes extends StencilHTMLAttributes {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface StcTabContent {
    'getChild': () => IStcTabContentData;
    'name': string;
  }
  interface StcTabContentAttributes extends StencilHTMLAttributes {
    'name'?: string;
  }

  interface StcTabHeader {
    'getChild': () => IStcTabHeaderData;
    'name': string;
  }
  interface StcTabHeaderAttributes extends StencilHTMLAttributes {
    'name'?: string;
    'onOnSelect'?: (event: CustomEvent) => void;
  }

  interface StcTabs {}
  interface StcTabsAttributes extends StencilHTMLAttributes {}

  interface StSignature {
    'callback': Function;
    'getSignatureImage': () => Uint8ClampedArray;
    'height': number;
    'label': string;
    'width': number;
  }
  interface StSignatureAttributes extends StencilHTMLAttributes {
    'callback'?: Function;
    'height'?: number;
    'label'?: string;
    'width'?: number;
  }
}

declare global {
  interface StencilElementInterfaces {
    'StcChip': Components.StcChip;
    'MyComponent': Components.MyComponent;
    'StcTabContent': Components.StcTabContent;
    'StcTabHeader': Components.StcTabHeader;
    'StcTabs': Components.StcTabs;
    'StSignature': Components.StSignature;
  }

  interface StencilIntrinsicElements {
    'stc-chip': Components.StcChipAttributes;
    'my-component': Components.MyComponentAttributes;
    'stc-tab-content': Components.StcTabContentAttributes;
    'stc-tab-header': Components.StcTabHeaderAttributes;
    'stc-tabs': Components.StcTabsAttributes;
    'st-signature': Components.StSignatureAttributes;
  }


  interface HTMLStcChipElement extends Components.StcChip, HTMLStencilElement {}
  var HTMLStcChipElement: {
    prototype: HTMLStcChipElement;
    new (): HTMLStcChipElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };

  interface HTMLStcTabContentElement extends Components.StcTabContent, HTMLStencilElement {}
  var HTMLStcTabContentElement: {
    prototype: HTMLStcTabContentElement;
    new (): HTMLStcTabContentElement;
  };

  interface HTMLStcTabHeaderElement extends Components.StcTabHeader, HTMLStencilElement {}
  var HTMLStcTabHeaderElement: {
    prototype: HTMLStcTabHeaderElement;
    new (): HTMLStcTabHeaderElement;
  };

  interface HTMLStcTabsElement extends Components.StcTabs, HTMLStencilElement {}
  var HTMLStcTabsElement: {
    prototype: HTMLStcTabsElement;
    new (): HTMLStcTabsElement;
  };

  interface HTMLStSignatureElement extends Components.StSignature, HTMLStencilElement {}
  var HTMLStSignatureElement: {
    prototype: HTMLStSignatureElement;
    new (): HTMLStSignatureElement;
  };

  interface HTMLElementTagNameMap {
    'stc-chip': HTMLStcChipElement
    'my-component': HTMLMyComponentElement
    'stc-tab-content': HTMLStcTabContentElement
    'stc-tab-header': HTMLStcTabHeaderElement
    'stc-tabs': HTMLStcTabsElement
    'st-signature': HTMLStSignatureElement
  }

  interface ElementTagNameMap {
    'stc-chip': HTMLStcChipElement;
    'my-component': HTMLMyComponentElement;
    'stc-tab-content': HTMLStcTabContentElement;
    'stc-tab-header': HTMLStcTabHeaderElement;
    'stc-tabs': HTMLStcTabsElement;
    'st-signature': HTMLStSignatureElement;
  }


  export namespace JSX {
    export interface Element {}
    export interface IntrinsicElements extends StencilIntrinsicElements {
      [tagName: string]: any;
    }
  }
  export interface HTMLAttributes extends StencilHTMLAttributes {}

}
